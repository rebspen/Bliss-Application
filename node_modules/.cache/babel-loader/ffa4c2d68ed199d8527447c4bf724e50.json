{"ast":null,"code":"var _jsxFileName = \"/Users/Bec/Coding/Bliss-Application/src/Views/List/index.jsx\";\nimport React, { Component } from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport { health as healthCheck } from \"../../Services/api\";\nimport { list as listQuestions } from \"../../Services/api\";\n\nclass List extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const health = await healthCheck();\n      console.log(health);\n\n      if (health.status === \"OK\") {\n        this.setState({\n          serverChecking: false,\n          serverHealthy: true\n        });\n      } else {\n        this.setState({\n          serverChecking: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const list = await listQuestions();\n\n      if (this.state.serverHealthy) {// this.setState({\n        //  questions: list\n        // });\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  }\n\n  render() {\n    console.log(this.state.serverChecking);\n    console.log(this.state.serverHealthy);\n    console.log(\"Questions\", this.state.questions);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"list\"), this.state.serverChecking && React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Checking Server Health\"), this.state.serverHealthy && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"server is healthy\"));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/Users/Bec/Coding/Bliss-Application/src/Views/List/index.jsx"],"names":["React","Component","health","healthCheck","list","listQuestions","List","constructor","state","questions","componentDidMount","console","log","status","setState","serverChecking","serverHealthy","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,oBAAtC;AACA,SAASC,IAAI,IAAIC,aAAjB,QAAsC,oBAAtC;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAC3BM,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACF,YAAMR,MAAM,GAAG,MAAMC,WAAW,EAAhC;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;;AACA,UAAIA,MAAM,CAACW,MAAP,KAAkB,IAAtB,EAA4B;AAC1B,aAAKC,QAAL,CAAc;AACZC,UAAAA,cAAc,EAAE,KADJ;AAEZC,UAAAA,aAAa,EAAE;AAFH,SAAd;AAID,OALD,MAKO;AACL,aAAKF,QAAL,CAAc;AACZC,UAAAA,cAAc,EAAE;AADJ,SAAd;AAGD;AACF,KAbD,CAaE,OAAOE,KAAP,EAAc;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF;;AAED,QAAMF,iBAAN,GAAyB;AACvB,QAAI;AACF,YAAMN,IAAI,GAAG,MAAMC,aAAa,EAAhC;;AACA,UAAG,KAAKG,KAAL,CAAWQ,aAAd,EAA4B,CAC1B;AACA;AACA;AACD;AACF,KAPD,CAOE,OAAOC,KAAP,EAAc;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF;;AAEDM,EAAAA,MAAM,GAAG;AACPP,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWO,cAAvB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWQ,aAAvB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKJ,KAAL,CAAWC,SAApC;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKD,KAAL,CAAWO,cAAX,IAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFhC,EAGG,KAAKP,KAAL,CAAWQ,aAAX,IAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAH/B,CADF;AAOD;;AAtD0B;;AAyD7B,eAAeV,IAAf","sourcesContent":["import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { health as healthCheck } from \"../../Services/api\";\nimport { list as listQuestions } from \"../../Services/api\";\n\nclass List extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: [],\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const health = await healthCheck();\n      console.log(health);\n      if (health.status === \"OK\") {\n        this.setState({\n          serverChecking: false,\n          serverHealthy: true\n        });\n      } else {\n        this.setState({\n          serverChecking: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  }\n\n  async componentDidMount(){\n    try {\n      const list = await listQuestions();\n      if(this.state.serverHealthy){\n        // this.setState({\n        //  questions: list\n        // });\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  }\n\n  render() {\n    console.log(this.state.serverChecking)\n    console.log(this.state.serverHealthy)\n    console.log(\"Questions\", this.state.questions)\n\n    return (\n      <div className=\"App\">\n        <h1>list</h1>\n        {this.state.serverChecking && <h3>Checking Server Health</h3>}\n        {this.state.serverHealthy && <p>server is healthy</p>}\n      </div>\n    );\n  }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}