{"ast":null,"code":"var _jsxFileName = \"/Users/Bec/Coding/Bliss-Application/src/Views/Home/index.jsx\";\nimport React, { Component } from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport { health as healthCheck } from \"../../Services/api\";\nimport { list as listQuestions } from \"../../Services/api\";\nimport Question from \"../../Components/Single\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverChecking: true,\n      serverHealthy: false,\n      questions: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const health = await healthCheck();\n      console.log(health);\n\n      if (health.status === \"OK\") {\n        const list = await listQuestions();\n        this.setState({\n          serverChecking: false,\n          serverHealthy: true,\n          questions: list\n        });\n      } else {\n        this.setState({\n          serverChecking: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  } // async componentDidUpdate(){\n  //   try {\n  //     const list = await listQuestions();\n  //     if(this.state.serverHealthy){\n  //       // this.setState({\n  //       //  questions: list\n  //       // });\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //     console.log(\"Error in service.\");\n  //   }\n  // }\n\n\n  render() {\n    console.log(this.state.serverChecking);\n    console.log(this.state.serverHealthy);\n    console.log(\"Questions\", this.state.questions);\n    const questions = this.state.questions;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"list\"), this.state.serverChecking && React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Checking Server Health\"), this.state.serverHealthy && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, questions.map(val => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, val.id, \". \", val.question));\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/Bec/Coding/Bliss-Application/src/Views/Home/index.jsx"],"names":["React","Component","health","healthCheck","list","listQuestions","Question","Home","constructor","state","serverChecking","serverHealthy","questions","componentDidMount","console","log","status","setState","error","render","map","val","id","question"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,oBAAtC;AACA,SAASC,IAAI,IAAIC,aAAjB,QAAsC,oBAAtC;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAC3BO,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,IADL;AAEXC,MAAAA,aAAa,EAAE,KAFJ;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACF,YAAMX,MAAM,GAAG,MAAMC,WAAW,EAAhC;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;;AACA,UAAIA,MAAM,CAACc,MAAP,KAAkB,IAAtB,EAA4B;AAC1B,cAAMZ,IAAI,GAAG,MAAMC,aAAa,EAAhC;AACA,aAAKY,QAAL,CAAc;AACZP,UAAAA,cAAc,EAAE,KADJ;AAEZC,UAAAA,aAAa,EAAE,IAFH;AAGZC,UAAAA,SAAS,EAAER;AAHC,SAAd;AAMD,OARD,MAQO;AACL,aAAKa,QAAL,CAAc;AACZP,UAAAA,cAAc,EAAE;AADJ,SAAd;AAGD;AACF,KAhBD,CAgBE,OAAOQ,KAAP,EAAc;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,GA/B0B,CAiC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAI,EAAAA,MAAM,GAAG;AACPL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,cAAvB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWE,aAAvB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKN,KAAL,CAAWG,SAApC;AACA,UAAMA,SAAS,GAAG,KAAKH,KAAL,CAAWG,SAA7B;AAGA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKH,KAAL,CAAWC,cAAX,IAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFhC,EAGG,KAAKD,KAAL,CAAWE,aAAX,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,SAAS,CAACQ,GAAV,CAAcC,GAAG,IAAI;AACpB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,GAAG,CAACC,EADP,QACaD,GAAG,CAACE,QADjB,CADF,CADF;AAOD,KARA,CADH,CAJJ,CADF;AAmBD;;AAzE0B;;AA4E7B,eAAehB,IAAf","sourcesContent":["import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { health as healthCheck } from \"../../Services/api\";\nimport { list as listQuestions } from \"../../Services/api\";\nimport Question from \"../../Components/Single\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverChecking: true,\n      serverHealthy: false,\n      questions: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const health = await healthCheck();\n      console.log(health);\n      if (health.status === \"OK\") {\n        const list = await listQuestions();\n        this.setState({\n          serverChecking: false,\n          serverHealthy: true,\n          questions: list\n          \n        });\n      } else {\n        this.setState({\n          serverChecking: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  }\n\n  // async componentDidUpdate(){\n  //   try {\n  //     const list = await listQuestions();\n  //     if(this.state.serverHealthy){\n  //       // this.setState({\n  //       //  questions: list\n  //       // });\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //     console.log(\"Error in service.\");\n  //   }\n  // }\n\n  render() {\n    console.log(this.state.serverChecking);\n    console.log(this.state.serverHealthy);\n    console.log(\"Questions\", this.state.questions);\n    const questions = this.state.questions;\n   \n\n    return (\n      <div>\n        <h1>list</h1>\n        {this.state.serverChecking && <h3>Checking Server Health</h3>}\n        {this.state.serverHealthy && (\n          <div>\n            {questions.map(val => {\n              return (\n                <div>\n                  <p>\n                    {val.id}. {val.question}\n                  </p>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}