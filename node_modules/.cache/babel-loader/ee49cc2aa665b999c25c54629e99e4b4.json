{"ast":null,"code":"var _jsxFileName = \"/Users/Bec/Coding/Bliss-Application/src/Views/Detail/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { health as healthCheck } from \"../../Services/api\";\nimport { list as listQuestions } from \"../../Services/api\";\n\nclass Detail extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverChecking: true,\n      serverHealthy: false,\n      questions: [],\n      search: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    const search = this.props.params.split(\"\").slice(1).join(\"\");\n    console.log(\"split\", search);\n    this.setState({\n      search: search\n    });\n\n    try {\n      const health = await healthCheck();\n      console.log(\"search params\", this.state.search);\n\n      if (health.status === \"OK\") {\n        const list = await listQuestions();\n        const listKeysAdded = list.map(val => {\n          val.key = val.id;\n          return val;\n        });\n        this.setState({\n          serverChecking: false,\n          serverHealthy: true,\n          questions: listKeysAdded\n        });\n      } else {\n        this.setState({\n          serverChecking: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  } // async componentDidUpdate(){\n  //   try {\n  //     const list = await listQuestions();\n  //     if(this.state.serverHealthy){\n  //       // this.setState({\n  //       //  questions: list\n  //       // });\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //     console.log(\"Error in service.\");\n  //   }\n  // }\n\n\n  render() {\n    console.log(this.props.location.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"details\"));\n  }\n\n}\n\nexport default Detail;","map":{"version":3,"sources":["/Users/Bec/Coding/Bliss-Application/src/Views/Detail/index.jsx"],"names":["React","Component","Link","health","healthCheck","list","listQuestions","Detail","constructor","state","serverChecking","serverHealthy","questions","search","componentDidMount","props","params","split","slice","join","console","log","setState","status","listKeysAdded","map","val","key","id","error","render","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,oBAAtC;AACA,SAASC,IAAI,IAAIC,aAAjB,QAAsC,oBAAtC;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAC7BO,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,IADL;AAEXC,MAAAA,aAAa,EAAE,KAFJ;AAGXC,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,MAAM,EAAE;AAJG,KAAb;AAMD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAMD,MAAM,GAAG,KAAKE,KAAL,CAAWC,MAAX,CACZC,KADY,CACN,EADM,EAEZC,KAFY,CAEN,CAFM,EAGZC,IAHY,CAGP,EAHO,CAAf;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBR,MAArB;AACA,SAAKS,QAAL,CAAc;AACZT,MAAAA,MAAM,EAAEA;AADI,KAAd;;AAGA,QAAI;AACF,YAAMV,MAAM,GAAG,MAAMC,WAAW,EAAhC;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKZ,KAAL,CAAWI,MAAxC;;AACA,UAAIV,MAAM,CAACoB,MAAP,KAAkB,IAAtB,EAA4B;AAC1B,cAAMlB,IAAI,GAAG,MAAMC,aAAa,EAAhC;AACA,cAAMkB,aAAa,GAAGnB,IAAI,CAACoB,GAAL,CAASC,GAAG,IAAI;AACpCA,UAAAA,GAAG,CAACC,GAAJ,GAAUD,GAAG,CAACE,EAAd;AACA,iBAAOF,GAAP;AACD,SAHqB,CAAtB;AAIA,aAAKJ,QAAL,CAAc;AACZZ,UAAAA,cAAc,EAAE,KADJ;AAEZC,UAAAA,aAAa,EAAE,IAFH;AAGZC,UAAAA,SAAS,EAAEY;AAHC,SAAd;AAKD,OAXD,MAWO;AACL,aAAKF,QAAL,CAAc;AACZZ,UAAAA,cAAc,EAAE;AADJ,SAAd;AAGD;AACF,KAnBD,CAmBE,OAAOmB,KAAP,EAAc;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,GA3C4B,CA6C7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAS,EAAAA,MAAM,GAAG;AACPV,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWgB,QAAX,CAAoBtB,KAAhC;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD;;AAlE4B;;AAqE/B,eAAeF,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { health as healthCheck } from \"../../Services/api\";\nimport { list as listQuestions } from \"../../Services/api\";\n\nclass Detail extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverChecking: true,\n      serverHealthy: false,\n      questions: [],\n      search: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    const search = this.props.params\n      .split(\"\")\n      .slice(1)\n      .join(\"\");\n    console.log(\"split\", search);\n    this.setState({\n      search: search\n    });\n    try {\n      const health = await healthCheck();\n      console.log(\"search params\", this.state.search);\n      if (health.status === \"OK\") {\n        const list = await listQuestions();\n        const listKeysAdded = list.map(val => {\n          val.key = val.id;\n          return val;\n        });\n        this.setState({\n          serverChecking: false,\n          serverHealthy: true,\n          questions: listKeysAdded\n        });\n      } else {\n        this.setState({\n          serverChecking: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  }\n\n  // async componentDidUpdate(){\n  //   try {\n  //     const list = await listQuestions();\n  //     if(this.state.serverHealthy){\n  //       // this.setState({\n  //       //  questions: list\n  //       // });\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //     console.log(\"Error in service.\");\n  //   }\n  // }\n\n  render() {\n    console.log(this.props.location.state);\n    return (\n      <div>\n        <h1>details</h1>\n      </div>\n    );\n  }\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}