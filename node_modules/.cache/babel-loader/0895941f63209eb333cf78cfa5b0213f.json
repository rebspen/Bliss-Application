{"ast":null,"code":"var _jsxFileName = \"/Users/Bec/Coding/Bliss-Application/src/Views/Home/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { health as healthCheck } from \"../../Services/api\";\nimport { list as listQuestions } from \"../../Services/api\";\nimport Question from \"../../Components/Single\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverChecking: true,\n      serverHealthy: false,\n      questions: [],\n      question: [],\n      search: \"\",\n      multiple: true,\n      single: false\n    };\n    this.updateSearch = this.updateSearch.bind(this);\n  }\n\n  async componentDidMount() {\n    let search = this.props.location.search.split(\"\").slice(1).join(\"\");\n\n    if (parseInt(search)) {\n      search = parseInt(search);\n    }\n\n    this.setState({\n      search: search\n    });\n\n    try {\n      const health = await healthCheck();\n\n      if (health.status === \"OK\") {\n        const list = await listQuestions(this.state.search);\n        console.log(\"API RETURNS\", list);\n        this.setState({\n          serverChecking: false,\n          serverHealthy: true,\n          questions: list\n        });\n\n        if (list.length === 1) {\n          this.setState({\n            multiple: false,\n            single: true,\n            questions: [...this.state.questions, list]\n          });\n        }\n      } else {\n        this.setState({\n          serverChecking: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  }\n\n  async updateSearch(id) {\n    this.setState({\n      questions: []\n    });\n    const search = id;\n    this.setState({\n      search: search\n    });\n\n    try {\n      const list = await listQuestions(this.state.search);\n      const finished = list.map();\n      this.setState({\n        questions: [list],\n        multiple: false,\n        single: true\n      });\n      console.log(\"got the new questions\");\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  }\n\n  render() {\n    const questions = this.state.questions;\n    console.log(\"questions\", questions);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"list\"), this.state.serverChecking && React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Checking Server Health\"), this.state.serverHealthy && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, questions.map(val => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: val.thumb_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, val.id, \". \", val.question), React.createElement(\"button\", {\n        onClick: () => this.updateSearch(val.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/questions?${val.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"See details\")));\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/Bec/Coding/Bliss-Application/src/Views/Home/index.jsx"],"names":["React","Component","Link","health","healthCheck","list","listQuestions","Question","Home","constructor","state","serverChecking","serverHealthy","questions","question","search","multiple","single","updateSearch","bind","componentDidMount","props","location","split","slice","join","parseInt","setState","status","console","log","length","error","id","finished","map","render","val","thumb_url"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { health as healthCheck } from \"../../Services/api\";\nimport { list as listQuestions } from \"../../Services/api\";\nimport Question from \"../../Components/Single\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverChecking: true,\n      serverHealthy: false,\n      questions: [],\n      question: [],\n      search: \"\",\n      multiple: true,\n      single: false\n    };\n    this.updateSearch = this.updateSearch.bind(this);\n  }\n\n  async componentDidMount() {\n    let search = this.props.location.search\n      .split(\"\")\n      .slice(1)\n      .join(\"\");\n    if (parseInt(search)) {\n      search = parseInt(search);\n    }\n    this.setState({\n      search: search\n    });\n    try {\n      const health = await healthCheck();\n      if (health.status === \"OK\") {\n        const list = await listQuestions(this.state.search);\n        console.log(\"API RETURNS\", list);\n        this.setState({\n          serverChecking: false,\n          serverHealthy: true,\n          questions: list\n        });\n        if(list.length === 1){\n          this.setState({\n            multiple: false,\n            single: true,\n            questions: [...this.state.questions, list]\n          });\n        }\n      } else {\n        this.setState({\n          serverChecking: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  }\n\n  async updateSearch(id) {\n    this.setState({\n      questions: []\n    });\n    const search = id\n    this.setState({\n      search: search\n    });\n    try {\n      const list = await listQuestions(this.state.search);\n      const finished = list.map()\n      this.setState({\n        questions: [list],\n        multiple: false,\n        single: true\n      });\n      console.log(\"got the new questions\");\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  }\n\n  render() {\n    const questions = this.state.questions;\n    console.log(\"questions\", questions);\n    return (\n      <div>\n        <h1>list</h1>\n        {this.state.serverChecking && <h3>Checking Server Health</h3>}\n        {this.state.serverHealthy && (\n          <div>\n            {questions.map(val => {\n              return (\n                <div>\n                  <img src={val.thumb_url} />\n                  <p>\n                    {val.id}. {val.question}\n                  </p>\n                  <button onClick={() => this.updateSearch(val.id)}>\n                    <Link to={`/questions?${val.id}`}>\n                      See details\n                    </Link>\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}