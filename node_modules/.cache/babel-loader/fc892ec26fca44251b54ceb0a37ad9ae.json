{"ast":null,"code":"var _jsxFileName = \"/Users/Bec/Coding/Bliss-Application/src/Views/List/index.jsx\";\nimport React, { Component } from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport { health as healthCheck } from \"./../../Services/api\";\nimport { list as listQuestions } from \"./../../Services/api\";\n\nclass List extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverChecking: true,\n      serverHealthy: false,\n      questions: [],\n      name: \"becca\"\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const health = await healthCheck();\n      console.log(health);\n\n      if (health.status === \"OK\") {\n        this.setState({\n          serverChecking: false,\n          serverHealthy: true\n        });\n      } else {\n        this.setState({\n          serverChecking: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  }\n\n  async componentDidUpdate() {\n    try {\n      const list = await listQuestions();\n      console.log(list);\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  }\n\n  render() {\n    console.log(this.state.serverChecking);\n    console.log(this.state.serverHealthy);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"list\"), this.state.serverChecking && React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Checking Server Health\"), this.state.serverHealthy && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"server is healthy\"));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/Users/Bec/Coding/Bliss-Application/src/Views/List/index.jsx"],"names":["React","Component","health","healthCheck","list","listQuestions","List","constructor","state","serverChecking","serverHealthy","questions","name","componentDidMount","console","log","status","setState","error","componentDidUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,sBAAtC;AACA,SAASC,IAAI,IAAIC,aAAjB,QAAsC,sBAAtC;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAC3BM,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,IADL;AAEXC,MAAAA,aAAa,EAAE,KAFJ;AAGXC,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,IAAI,EAAE;AAJK,KAAb;AAMD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACF,YAAMX,MAAM,GAAG,MAAMC,WAAW,EAAhC;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;;AACA,UAAIA,MAAM,CAACc,MAAP,KAAkB,IAAtB,EAA4B;AAC1B,aAAKC,QAAL,CAAc;AACZR,UAAAA,cAAc,EAAE,KADJ;AAEZC,UAAAA,aAAa,EAAE;AAFH,SAAd;AAID,OALD,MAKO;AACL,aAAKO,QAAL,CAAc;AACZR,UAAAA,cAAc,EAAE;AADJ,SAAd;AAGD;AACF,KAbD,CAaE,OAAOS,KAAP,EAAc;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF;;AAED,QAAMI,kBAAN,GAA0B;AACxB,QAAI;AACF,YAAMf,IAAI,GAAG,MAAMC,aAAa,EAAhC;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AAED,KAJD,CAIE,OAAOc,KAAP,EAAc;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF;;AAEDK,EAAAA,MAAM,GAAG;AACPN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,cAAvB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWE,aAAvB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKF,KAAL,CAAWC,cAAX,IAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFhC,EAGG,KAAKD,KAAL,CAAWE,aAAX,IAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAH/B,CADF;AAOD;;AArD0B;;AAwD7B,eAAeJ,IAAf","sourcesContent":["import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { health as healthCheck } from \"./../../Services/api\";\nimport { list as listQuestions } from \"./../../Services/api\";\n\nclass List extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverChecking: true,\n      serverHealthy: false,\n      questions: [],\n      name: \"becca\"\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const health = await healthCheck();\n      console.log(health);\n      if (health.status === \"OK\") {\n        this.setState({\n          serverChecking: false,\n          serverHealthy: true\n        });\n      } else {\n        this.setState({\n          serverChecking: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  }\n\n  async componentDidUpdate(){\n    try {\n      const list = await listQuestions();\n      console.log(list);\n      \n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  }\n\n  render() {\n    console.log(this.state.serverChecking)\n    console.log(this.state.serverHealthy)\n\n    return (\n      <div className=\"App\">\n        <h1>list</h1>\n        {this.state.serverChecking && <h3>Checking Server Health</h3>}\n        {this.state.serverHealthy && <p>server is healthy</p>}\n      </div>\n    );\n  }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}