{"ast":null,"code":"var _jsxFileName = \"/Users/Bec/Coding/Bliss-Application/src/Views/Detail/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { health as healthCheck } from \"../../Services/api\";\nimport { list as listQuestions } from \"../../Services/api\";\n\nclass Detail extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverChecking: true,\n      serverHealthy: false,\n      questions: [],\n      search: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    console.log(\"split\", this.props.params.split(\"\").unsift().join);\n    this.setState({\n      search: this.props.params\n    });\n\n    try {\n      const health = await healthCheck();\n      console.log(\"search params\", this.state.search);\n\n      if (health.status === \"OK\") {\n        const list = await listQuestions();\n        const listKeysAdded = list.map(val => {\n          val.key = val.id;\n          return val;\n        });\n        this.setState({\n          serverChecking: false,\n          serverHealthy: true,\n          questions: listKeysAdded\n        });\n      } else {\n        this.setState({\n          serverChecking: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  } // async componentDidUpdate(){\n  //   try {\n  //     const list = await listQuestions();\n  //     if(this.state.serverHealthy){\n  //       // this.setState({\n  //       //  questions: list\n  //       // });\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //     console.log(\"Error in service.\");\n  //   }\n  // }\n\n\n  render() {\n    console.log(this.props.location.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"details\"));\n  }\n\n}\n\nexport default Detail;","map":{"version":3,"sources":["/Users/Bec/Coding/Bliss-Application/src/Views/Detail/index.jsx"],"names":["React","Component","Link","health","healthCheck","list","listQuestions","Detail","constructor","state","serverChecking","serverHealthy","questions","search","componentDidMount","console","log","props","params","split","unsift","join","setState","status","listKeysAdded","map","val","key","id","error","render","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,oBAAtC;AACA,SAASC,IAAI,IAAIC,aAAjB,QAAsC,oBAAtC;;AAGA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAC7BO,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,IADL;AAEXC,MAAAA,aAAa,EAAE,KAFJ;AAGXC,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,MAAM,EAAE;AAJG,KAAb;AAMD;;AAED,QAAMC,iBAAN,GAA0B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwB,EAAxB,EAA4BC,MAA5B,GAAqCC,IAAzD;AACA,SAAKC,QAAL,CAAc;AACZT,MAAAA,MAAM,EAAE,KAAKI,KAAL,CAAWC;AADP,KAAd;;AAGA,QAAI;AACF,YAAMf,MAAM,GAAG,MAAMC,WAAW,EAAhC;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKP,KAAL,CAAWI,MAAxC;;AACA,UAAIV,MAAM,CAACoB,MAAP,KAAkB,IAAtB,EAA4B;AAC1B,cAAMlB,IAAI,GAAG,MAAMC,aAAa,EAAhC;AACA,cAAMkB,aAAa,GAAGnB,IAAI,CAACoB,GAAL,CAAUC,GAAD,IAAO;AACpCA,UAAAA,GAAG,CAACC,GAAJ,GAAUD,GAAG,CAACE,EAAd;AACA,iBAAOF,GAAP;AAAW,SAFS,CAAtB;AAGA,aAAKJ,QAAL,CAAc;AACZZ,UAAAA,cAAc,EAAE,KADJ;AAEZC,UAAAA,aAAa,EAAE,IAFH;AAGZC,UAAAA,SAAS,EAAEY;AAHC,SAAd;AAKD,OAVD,MAUO;AACL,aAAKF,QAAL,CAAc;AACZZ,UAAAA,cAAc,EAAE;AADJ,SAAd;AAGD;AACF,KAlBD,CAkBE,OAAOmB,KAAP,EAAc;AACdd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,GAtC4B,CAwC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAc,EAAAA,MAAM,GAAG;AACPf,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWc,QAAX,CAAoBtB,KAAhC;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAMD;;AA9D4B;;AAiE/B,eAAeF,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { health as healthCheck } from \"../../Services/api\";\nimport { list as listQuestions } from \"../../Services/api\";\n\n\nclass Detail extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverChecking: true,\n      serverHealthy: false,\n      questions: [],\n      search: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    console.log(\"split\",this.props.params.split(\"\").unsift().join)\n    this.setState({\n      search: this.props.params\n    });\n    try {\n      const health = await healthCheck();\n      console.log(\"search params\", this.state.search);\n      if (health.status === \"OK\") {\n        const list = await listQuestions()\n        const listKeysAdded = list.map((val)=>{ \n          val.key = val.id; \n          return val})\n        this.setState({\n          serverChecking: false,\n          serverHealthy: true,\n          questions: listKeysAdded\n        });\n      } else {\n        this.setState({\n          serverChecking: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"Error in service.\");\n    }\n  }\n\n  // async componentDidUpdate(){\n  //   try {\n  //     const list = await listQuestions();\n  //     if(this.state.serverHealthy){\n  //       // this.setState({\n  //       //  questions: list\n  //       // });\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //     console.log(\"Error in service.\");\n  //   }\n  // }\n\n  render() {\n    console.log(this.props.location.state)\n    return (\n      <div>\n        <h1>details</h1>\n        \n      </div>\n    );\n  }\n}\n\nexport default Detail;\n\n"]},"metadata":{},"sourceType":"module"}